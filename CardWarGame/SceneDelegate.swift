import UIKit

class SceneDelegate: UIResponder, UIWindowSceneDelegate {

    var window: UIWindow?

    func scene(_ scene: UIScene, willConnectTo session: UISceneSession, options connectionOptions: UIScene.ConnectionOptions) {
        // Используйте этот метод для дополнительной настройки и присоединения UIWindow `window` к предоставленной UIWindowScene` scene`.
        // При использовании раскадровки свойство `window` будет автоматически инициализировано и присоединено к сцене.
        // Этот делегат не подразумевает, что соединяющая сцена или сеанс являются новыми (см. Вместо этого `application: configurationForConnectingSceneSession`).
        guard let _ = (scene as? UIWindowScene) else { return }
    }

    func sceneDidDisconnect(_ scene: UIScene) {
        // Вызывается, когда сцена освобождается системой.
        // Это происходит вскоре после того, как сцена входит в фон или когда ее сеанс отбрасывается.
        // Освобождаем любые ресурсы, связанные с этой сценой, которые могут быть воссозданы при следующем подключении сцены.
        // Сцена может повторно подключиться позже, так как ее сеанс не был обязательно удален (см. Вместо этого `application: didDiscardSceneSessions`).
    }

    func sceneDidBecomeActive(_ scene: UIScene) {
        // Вызывается, когда сцена перешла из неактивного состояния в активное состояние.
        // Используйте этот метод для перезапуска любых задач, которые были приостановлены (или еще не запущены), когда сцена была неактивной.
    }

    func sceneWillResignActive(_ scene: UIScene) {
        // Вызывается, когда сцена переходит из активного состояния в неактивное состояние.
        // Это может произойти из-за временных прерываний (например, входящий телефонный звонок).
    }

    func sceneWillEnterForeground(_ scene: UIScene) {
        // Вызывается при переходе сцены из фона на передний план.
        // Используйте этот метод, чтобы отменить изменения, внесенные при входе в фон.
    }

    func sceneDidEnterBackground(_ scene: UIScene) {
        // Вызывается при переходе сцены с переднего на задний план.
        // Используйте этот метод для сохранения данных, освобождения общих ресурсов и хранения достаточного количества информации о состоянии сцены
        // чтобы восстановить сцену до ее текущего состояния.
    }


}

